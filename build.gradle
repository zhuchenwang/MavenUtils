/*
 * Copyright 2016 Zhuchen Wang
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group 'com.github.zxfun'
version '0.1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.7

repositories {
  mavenCentral()
  mavenLocal()
}

def aetherVersion = '1.1.0'

dependencies {
  compile group: 'org.eclipse.aether', name: 'aether-api', version: aetherVersion
  compile group: 'org.eclipse.aether', name: 'aether-spi', version: aetherVersion
  compile group: 'org.eclipse.aether', name: 'aether-util', version: aetherVersion
  compile group: 'org.eclipse.aether', name: 'aether-impl', version: aetherVersion
  compile group: 'org.eclipse.aether', name: 'aether-connector-basic', version: aetherVersion
  compile group: 'org.eclipse.aether', name: 'aether-transport-wagon', version: aetherVersion
  compile group: 'org.eclipse.aether', name: 'aether-transport-classpath', version: aetherVersion
  compile group: 'org.eclipse.aether', name: 'aether-transport-file', version: aetherVersion
  compile group: 'org.eclipse.aether', name: 'aether-transport-http', version: aetherVersion
  compile group: 'com.typesafe', name: 'config', version: '1.2.1'
  compile group: 'org.apache.maven', name: 'maven-core', version: '3.3.9'
  compile 'org.slf4j:slf4j-api:1.7.18'
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

task sourcesJar(type: Jar) {
  classifier "sources"
  from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar, javadocJar
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
        authentication(userName: System.getenv("SONATYPE_USERNAME"), password: System.getenv("SONATYPE_PASSWORD"))
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
        authentication(userName: System.getenv("SONATYPE_USERNAME"), password: System.getenv("SONATYPE_PASSWORD"))
      }

      pom.project {
        name 'maven-utils'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'A utility library to analyze Maven dependencies programatically'
        url 'https://github.com/zxfun/MavenUtils'

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        scm {
          connection 'scm:git:git@github.com:zxfun/MavenUtils.git'
          developerConnection 'scm:git:git@github.com:zxfun/MavenUtils.git'
          url 'git@github.com:zxfun/MavenUtils.git'
        }

        developers {
          developer {
            name 'Zhuchen Wang'
            email 'zcx.wang@gmail.com'
          }
        }
      }
    }
  }
}
